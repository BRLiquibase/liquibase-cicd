name: Liquibase Simple Pipeline

on:
  workflow_dispatch:
    inputs:
      target:
        description: "Target environment"
        required: true
        type: choice
        options: [dev, test, prod]
        default: dev
      run_audit:
        description: "Run audits?"
        required: true
        type: choice
        options: [on, off]
        default: on
      run_drift:
        description: "Run drift?"
        required: true
        type: choice
        options: [on, off]
        default: on
      run_policies:
        description: "Run policies (checks)?"
        required: true
        type: choice
        options: [on, off]
        default: on

permissions:
  contents: read

jobs:
  liquibase:
    runs-on: self-hosted

    env:
      DEV_URL:  jdbc:postgresql://localhost:5433/postgres
      TEST_URL: jdbc:postgresql://localhost:5434/postgres
      PROD_URL: jdbc:postgresql://localhost:5435/postgres

    steps:
      - uses: actions/checkout@v4

      - name: Select target URL
        id: envmap
        shell: bash
        run: |
          case "${{ inputs.target }}" in
            dev)  echo "LB_URL=${{ env.DEV_URL }}"  >> $GITHUB_OUTPUT;;
            test) echo "LB_URL=${{ env.TEST_URL }}" >> $GITHUB_OUTPUT;;
            prod) echo "LB_URL=${{ env.PROD_URL }}" >> $GITHUB_OUTPUT;;
            *)    echo "Unknown target"; exit 1;;
          esac

      # If your license is in GitHub Secrets as LIQUIBASE_PRO_LICENSE:
      # (If you fetch from Vault, set an env var LIQUIBASE_PRO_LICENSE before this step.)
      - name: Write liquibase.properties (incl. Pro license)
        shell: bash
        env:
          LB_URL:  ${{ steps.envmap.outputs.LB_URL }}
          LB_USER: ${{ secrets.DB_USER }}
          LB_PWD:  ${{ secrets.DB_PWD }}
          LIQUIBASE_PRO_LICENSE: ${{ secrets.LIQUIBASE_PRO_LICENSE }}
        run: |
          cat > liquibase.properties <<EOF
          url=${LB_URL}
          username=${LB_USER}
          password=${LB_PWD}
          liquibase.licenseKey=${LIQUIBASE_PRO_LICENSE}
          EOF

      - name: Normalize toggles for Flow
        shell: bash
        run: |
          norm () {
            v="$1"
            case "$v" in
              on|On|ON|true|True|TRUE|1) echo on ;;
              off|Off|OFF|false|False|FALSE|0|'') echo off ;;
              *) echo "$v" ;;
            esac
          }
          echo "RUN_AUDIT=$(norm '${{ inputs.run_audit }}')"       >> $GITHUB_ENV
          echo "RUN_DRIFT=$(norm '${{ inputs.run_drift }}')"       >> $GITHUB_ENV
          echo "RUN_POLICIES=$(norm '${{ inputs.run_policies }}')" >> $GITHUB_ENV

      # NEW: export creds & reference URL for the flow's 'diff' step
      - name: Export connection env for Flow
        shell: bash
        run: |
          echo "LB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "LB_PWD=${{ secrets.DB_PWD }}"   >> $GITHUB_ENV
          echo "TEST_URL=${{ env.TEST_URL }}"   >> $GITHUB_ENV

      - name: Run Liquibase flow
        shell: bash
        run: |
          # License is auto-discovered via liquibase.properties; no --license-key needed
          liquibase flow --flow-file=liquibase.flowfile.yaml
