--liquibase formatted sql
-- Primary target: PostgreSQL. DB2/LUW equivalents are provided as commented lines prefixed with "-- [DB2]".

--changeset james.bennett:001
-- no comment/context/labels; NO ROLLBACK  -> RollbackRequired
CREATE TABLE peoples_money (
    id          BIGSERIAL PRIMARY KEY,
    first_name  TEXT,
    last_name   TEXT,
    email       TEXT,      -- PII-ish
    ssn         TEXT,      -- PII-ish
    dob         DATE       -- PII-ish
);
--changeset james.bennett:002
-- NO ROLLBACK; very wide table -> TableColumnLimit
CREATE TABLE way_too_wide (
    id BIGSERIAL PRIMARY KEY,
    c001 INT, c002 INT, c003 INT, c004 INT, c005 INT, c006 INT, c007 INT, c008 INT, c009 INT, c010 INT,
    c011 INT, c012 INT, c013 INT, c014 INT, c015 INT, c016 INT, c017 INT, c018 INT, c019 INT, c020 INT,
    c021 INT, c022 INT, c023 INT, c024 INT, c025 INT, c026 INT, c027 INT, c028 INT, c029 INT, c030 INT,
    c031 INT, c032 INT, c033 INT, c034 INT, c035 INT, c036 INT, c037 INT, c038 INT, c039 INT, c040 INT,
    c041 INT, c042 INT, c043 INT, c044 INT, c045 INT, c046 INT, c047 INT, c048 INT, c049 INT, c050 INT,
    c051 INT, c052 INT, c053 INT, c054 INT, c055 INT, c056 INT, c057 INT, c058 INT, c059 INT, c060 INT
);
-- [DB2] CREATE TABLE way_too_wide (
-- [DB2]   id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
-- [DB2]   c001 INTEGER, c002 INTEGER, c003 INTEGER, c004 INTEGER, c005 INTEGER, c006 INTEGER, c007 INTEGER, c008 INTEGER, c009 INTEGER, c010 INTEGER,
-- [DB2]   c011 INTEGER, c012 INTEGER, c013 INTEGER, c014 INTEGER, c015 INTEGER, c016 INTEGER, c017 INTEGER, c018 INTEGER, c019 INTEGER, c020 INTEGER,
-- [DB2]   c021 INTEGER, c022 INTEGER, c023 INTEGER, c024 INTEGER, c025 INTEGER, c026 INTEGER, c027 INTEGER, c028 INTEGER, c029 INTEGER, c030 INTEGER,
-- [DB2]   c031 INTEGER, c032 INTEGER, c033 INTEGER, c034 INTEGER, c035 INTEGER, c036 INTEGER, c037 INTEGER, c038 INTEGER, c039 INTEGER, c040 INTEGER,
-- [DB2]   c041 INTEGER, c042 INTEGER, c043 INTEGER, c044 INTEGER, c045 INTEGER, c046 INTEGER, c047 INTEGER, c048 INTEGER, c049 INTEGER, c050 INTEGER,
-- [DB2]   c051 INTEGER, c052 INTEGER, c053 INTEGER, c054 INTEGER, c055 INTEGER, c056 INTEGER, c057 INTEGER, c058 INTEGER, c059 INTEGER, c060 INTEGER
-- [DB2] );

--changeset james.bennett:003
-- multiple statements in one set; NO ROLLBACK
-- ChangeDropColumnWarn (drop column)
ALTER TABLE customers ADD COLUMN temp_col TEXT;
ALTER TABLE customers DROP COLUMN temp_col;
-- [DB2] ALTER TABLE customers ADD COLUMN temp_col VARCHAR(4000);
-- [DB2] ALTER TABLE customers DROP COLUMN temp_col;

--changeset james.bennett:004
-- NO ROLLBACK -> ChangeDropTableWarn
DROP TABLE IF EXISTS way_too_wide;
-- [DB2] -- DB2 (LUW): typically no IF EXISTS. Use a precondition or ignore-when-missing pattern.
-- [DB2] -- Example: add a precondition or run "DROP TABLE way_too_wide" and handle SQLSTATE 42704 externally.
-- [DB2] -- DROP TABLE way_too_wide;

--changeset ben.riley:005
-- NO ROLLBACK -> ChangeTruncateTableWarn
CREATE TABLE scratch (id BIGSERIAL PRIMARY KEY, note TEXT);
TRUNCATE TABLE scratch;
-- [DB2] CREATE TABLE scratch (
-- [DB2]   id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
-- [DB2]   note VARCHAR(4000)
-- [DB2] );
-- [DB2] TRUNCATE TABLE scratch IMMEDIATE;

--changeset ben.riley:006
-- NO ROLLBACK -> ModifyDataTypeWarn
ALTER TABLE customers
    ALTER COLUMN first_name TYPE VARCHAR(10),
    ALTER COLUMN last_name  TYPE VARCHAR(10);
-- [DB2] ALTER TABLE customers ALTER COLUMN first_name SET DATA TYPE VARCHAR(10);
-- [DB2] ALTER TABLE customers ALTER COLUMN last_name  SET DATA TYPE VARCHAR(10);

--changeset ben.riley:007
-- GRANT patterns -> SqlGrantWarn / SqlGrantOptionWarn / SqlGrantAdminWarn
-- NO ROLLBACK
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'app_writer') THEN
        CREATE ROLE app_writer LOGIN PASSWORD 'badpassword';
    END IF;
END
$$ LANGUAGE plpgsql;

GRANT SELECT, INSERT, UPDATE ON ALL TABLES IN SCHEMA public TO app_writer WITH GRANT OPTION;  -- grant option
GRANT app_writer TO postgres WITH ADMIN OPTION;                                              -- admin option
-- [DB2] -- DB2 roles/users differ (no LOGIN/PASSWORD here). Example with a role and a local instance user:
-- [DB2] -- CREATE ROLE APP_WRITER;
-- [DB2] -- GRANT SELECT, INSERT, UPDATE ON TABLE customers TO ROLE APP_WRITER WITH GRANT OPTION;
-- [DB2] -- GRANT ROLE APP_WRITER TO USER DB2INST1 WITH ADMIN OPTION;

--changeset ben.riley:008
-- REVOKE pattern -> SqlRevokeWarn
-- NO ROLLBACK
REVOKE ALL ON SCHEMA public FROM PUBLIC;
-- [DB2] -- DB2 doesn’t have a built-in "public" schema; replace <SCHEMA> with your schema (e.g., DB2INST1).
-- [DB2] -- REVOKE USAGE ON SCHEMA <SCHEMA> FROM PUBLIC;
-- [DB2] -- REVOKE CREATEIN, ALTERIN, DROPIN ON SCHEMA <SCHEMA> FROM PUBLIC;

--changeset ben.riley:009
-- SELECT * pattern -> SqlSelectStarWarn
-- NO ROLLBACK
-- (Liquibase will run it as a raw SQL change; it’s intentionally useless)
SELECT * FROM customers;
-- [DB2] SELECT * FROM customers WITH UR;  -- WITH UR = uncommitted read (optional demo flourish)

--changeset ben.riley:010 runInTransaction:false
-- Explicitly disabling transactions -> CheckRunInTransactionValue (warn)
-- NO ROLLBACK
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_customers_email ON customers (email);
-- [DB2] -- No CONCURRENTLY; just create the index (Liquibase will still warn on runInTransaction:false).
-- [DB2] CREATE INDEX idx_customers_email ON customers (email);
